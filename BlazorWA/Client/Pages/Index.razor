@page "/"
@inject ServiciosSingleton singleton
@inject IRepositorio repositorio
@using static BlazorWA.Client.Shared.MainLayout;

<p style="color:@appState.Color">El valor del singleton es: @singleton.Valor</p>

<!-- El using de la clase UtilidadesString se realiza desde el archivo _Imports.razor -->
<p>Hola, @UtilidadesString.ConvertirEnMayusculas(nombre)</p>
<p>Hola, @UtilidadesString2.ConvertirEnMayusculas(nombre2)</p>

<p>Vamos a sumar 2 + 2 = @(2+2) </p>
<button @onclick="@(()=> Console.WriteLine("me han clikeado"))">Precioname</button>
<button @onclick="@manejarClick">Precioname desde metodo</button>

<div>
    <h3>Pelicula</h3>
    <p>Titulo: <b>@Spiderman.Titulo</b></p>
    <p>Lanzamiento: <b>@Spiderman.Lanzamiento.ToString("dd MM yyyy")</b></p>
</div>

<ListadoPeliculas Peliculas="ObtenerPeliculas()" />

@*<ListadoPeliculas @ref="listado" Peliculas="Peliculas" />*@

<ListadoPeliculas Peliculas="Peliculas" />

<button @onclick="AgregarPelicula">Agregar pelicula</button>

@*<ListadoPeliculas Peliculas="ObtenerPeliculasNull()">
        <span style="color:red;">Child Content</span>
    </ListadoPeliculas>

    <ListadoPeliculas Peliculas="ObtenerPeliculasNull()"/>

    <ListadoPeliculas Peliculas="ObtenerPeliculasNull()">
        <Cargando>
            <span style="color:red;">Child content con nombre</span>
        </Cargando>
        <NoHayRegistros>
            <span style="color:red;">no hay registros con nombre</span>
        </NoHayRegistros>
    </ListadoPeliculas>

    <ListadoPeliculas Peliculas="ObtenerPeliculasCantidad0()">
        <Cargando>
            <span style="color:red;">Child content con nombre</span>
        </Cargando>
        <NoHayRegistros>
            <span style="color:red;">no hay registros con nombre</span>
        </NoHayRegistros>
    </ListadoPeliculas>*@

<div>
    <h2>Crear nueva pelicula</h2>

    <EjemploTexbox placeholder="Nombre Pelicula" disabled="true" />

    <EjemploTexbox @attributes="@(new Dictionary<string, object>() {

                                      { "placeholder", "nuevo placeholder 1"},
                                      { "disabled", "true"},

                                })" />

    <EjemploTexbox @attributes="EjemploTexboxParametros" />

    <EjemploTexbox />
</div>

@code{
    //MarkupString, renderisa el codigo html de un string para representarlo bien en el navegador
    string nombre = "Ervin";
    string nombre2 = "Mario";
    public Pelicula Spiderman { get { return ObtenerPelicula(); } }
    private List<Pelicula> Peliculas;
    [CascadingParameter] protected AppState appState { get; set; } //este parametro se pasa desde el main layout
                                                                   //ListadoPeliculas listado;



    void AgregarPelicula()
    {
        Peliculas.Add(new Pelicula() { Titulo = "nueva pelicula", Lanzamiento = DateTime.Now });
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        //var lista = listado.Peliculas;
        Peliculas = repositorio.ObtenerPeliculas();
    }

    private Dictionary<string, object> EjemploTexboxParametros = new Dictionary<string, object>() {

                                      { "placeholder", "nuevo placeholder 2"},
                                      { "disabled", "true"},

                                };

    public class UtilidadesString2
    {
        public static string ConvertirEnMayusculas(string nombre)
        {
            return nombre.ToUpper();
        }
    }



    private void manejarClick()
    {
        Console.WriteLine("me han clikeado desde metodo");
    }

    private Pelicula ObtenerPelicula()
    {
        return new Pelicula() { Titulo = "Spider man", Lanzamiento = new DateTime(2019, 7, 2) };
    }

    private List<Pelicula> ObtenerPeliculas()
    {
        return new List<Pelicula>()
{
            new Pelicula(){ Titulo="<b>Spiderman</b>", Lanzamiento = new DateTime(2019,7,2) },
            new Pelicula(){ Titulo="<i>Moana</i>", Lanzamiento=new DateTime(2016,11,23)},
            new Pelicula(){ Titulo = "Inception", Lanzamiento= new DateTime(2010,7,26) }
        };
    }

    private List<Pelicula> ObtenerPeliculasNull()
    {
        return null;
    }

    private List<Pelicula> ObtenerPeliculasCantidad0()
    {
        return new List<Pelicula>();
    }
}